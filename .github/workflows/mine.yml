name: CI/CD Pipeline for Slack Reminder App

on:
  push:
    tags:
      - '*'            # Run full pipeline on tag push
  workflow_dispatch:     # Allow manual trigger (minus push)

env:
  IMAGE_NAME: yourdockerhubusername/rz-sl-me

jobs:
  build-and-test:
    name: Build & Test Laravel CLI App
    runs-on: ubuntu-latest
    environment:
      name: ${{ 
        github.ref_name == 'main' && 'prod' || 
        github.ref_name == 'stg' && 'stg' || 
        'dev' 
      }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build test image (includes dev dependencies)
        run: docker build --file Dockerfile --target test -t slack-test .

      - name: Run Laravel unit tests in container
        run: |
          docker run --rm \
            -e SLACK_SECRET="${{ secrets.SLACK_SECRET }}" \
            slack-test php artisan test --testdox

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, dom, fileinfo # Suggested by shivammathur/setup-php@v2 for laravel projects

      - name: Install dependencies (with dev)
        run: composer install

      - name: Run unit tests
        env:
          SLACK_SECRET: dummy_value  # Required at runtime, not for testing output
        run: php artisan test --testdox

  build-docker:
    name: Build Final Docker Image (no dev deps)
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: ${{ 
        github.ref_name == 'main' && 'prod' || 
        github.ref_name == 'stg' && 'stg' || 
        'dev' 
      }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare clean app directory
        run: |
          mkdir app
          cp -r . app/
          docker run --rm -v "$PWD/app":/app -w /app composer:2 \
            install --no-dev --optimize-autoloader

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ github.ref_name }} ./app

      - name: Verify runtime output
        run: |
          docker run --rm -e SLACK_SECRET=testing123 $IMAGE_NAME:${{ github.ref_name }} | grep 'SUCCESS! A message was sent'

      - name: Login to DockerHub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to DockerHub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          docker push $IMAGE_NAME:${{ github.ref_name }}
